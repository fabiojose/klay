plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

description 'Klay Core'

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    implementation 'org.apache.groovy:groovy:4.0.0'

    implementation('org.jooq:joor:0.9.13'){
      exclude group: 'org.slf4j', module: 'slf4j-log4j12'
      exclude group: 'log4j', module: 'log4j'
    }

    compileOnly 'io.quarkus:quarkus-kafka-streams'

    testImplementation 'io.quarkus:quarkus-junit5'
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(GenerateModuleMetadata).configureEach {
    suppressedValidationErrors.add('enforced-platform')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'klay-core'
            version = project.version

            from components.java

            pom {
                name = 'Klay Core'
                packaging = 'jar'
                description = 'Core classes used by klay-cli and exported applications'
                url = 'https://github.com/fabiojose/klay'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'fabiojose'
                        name = 'Fábio José'
                        email = 'fabiojose@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/fabiojose/klay.git'
                    developerConnection = 'scm:git:https://github.com/fabiojose/klay.git'
                    url = 'https://github.com/fabiojose/klay'
                }
            }
        }
    }
    repositories {
      maven {
        name 'OSSRH'
        url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
        credentials {
          username = ossrhUsername
          password = ossrhPassword
        }
      }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
